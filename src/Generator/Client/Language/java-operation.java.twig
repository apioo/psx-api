
{% for operation in operations %}
{% if operation.description %}
    /**
     * {{ operation.description }}
     */
{% endif %}
    public {% if operation.return %}{{ operation.return.type|raw }}{% else %}void{% endif %} {{ operation.methodName }}({% for name, arg in operation.arguments %}{{ arg.type|raw }} {{ name }}{% if not loop.last %}, {% endif %}{% endfor %}) throws URISyntaxException, IOException {
        Map<String, Object> pathParams = new HashMap<>();
{% for name in operation.pathNames %}
        pathParams.put("{{ name }}", {{ name }});
{% endfor %}

        Map<String, Object> queryParams = new HashMap<>();
{% for name in operation.queryNames %}
        queryParams.put("{{ name }}", {{ name }});
{% endfor %}

        URIBuilder builder = new URIBuilder(this.parser.url('{{ operation.path }}', pathParams));
        this.parser.query(builder, queryParams);

        Http{{ operation.method|lower|capitalize }} request = new Http{{ operation.method|lower|capitalize }}(builder.build());
{% if operation.bodyName is not null %}
        request.addHeader("Content-Type", "application/json");
        request.setEntity(new StringEntity(this.objectMapper.writeValueAsString({{ operation.bodyName }}), ContentType.APPLICATION_JSON));
{% endif %}

        HttpResponse response = this.httpClient.execute(request);

{% if operation.return %}
        return this.objectMapper.readValue(EntityUtils.toString(response.getEntity(), "UTF-8"), {{ operation.return.type }}.class);
{% endif %}
    }

{% endfor %}
