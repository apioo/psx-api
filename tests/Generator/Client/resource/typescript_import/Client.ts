/**
 * Client automatically generated by SDKgen please do not edit this file manually
 * {@link https://sdkgen.app}
 */

import {ClientAbstract, CredentialsInterface, TokenStoreInterface, HttpRequest} from "sdkgen-client"
import {Anonymous} from "sdkgen-client"
import {ClientException, UnknownStatusCodeException} from "sdkgen-client";

import {ImportMyTypeException} from "./ImportMyTypeException";
import {MyType} from "./../foo/MyType";

export class Client extends ClientAbstract {
    /**
     * @returns {Promise<MyType>}
     * @throws {ImportMyTypeException}
     * @throws {ClientException}
     */
    public async foo(): Promise<MyType> {
        const url = this.parser.url('/anything', {
        });

        let request: HttpRequest = {
            url: url,
            method: 'GET',
            headers: {
            },
            params: this.parser.query({
            }, [
            ]),
        };

        const response = await this.httpClient.request(request);
        if (response.ok) {
            return await response.json() as MyType;
        }

        const statusCode = response.status;
        if (statusCode === 500) {
            throw new ImportMyTypeException(await response.json() as MyType);
        }

        throw new UnknownStatusCodeException('The server returned an unknown status code: ' + statusCode);
    }





    public static buildAnonymous(): Client
    {
        return new Client('http://api.foo.com', new Anonymous());
    }
}
