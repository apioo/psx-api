/**
 * BazTag automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */


import app.sdkgen.client.ClientAbstract;
import app.sdkgen.client.Credentials.*;
import app.sdkgen.client.CredentialsInterface;
import app.sdkgen.client.TokenStoreInterface;
import java.util.List;

public class BazTag extends TagAbstract {

    /**
     * Returns a collection
     */
    public EntryCollection get(String year) throws URISyntaxException, IOException {
        Map<String, Object> pathParams = new HashMap<>();
        pathParams.put("year", year);

        Map<String, Object> queryParams = new HashMap<>();

        URIBuilder builder = new URIBuilder(this.parser.url('/bar/$year&lt;[0-9]+&gt;', pathParams));
        this.parser.query(builder, queryParams);

        HttpGet request = new HttpGet(builder.build());

        HttpResponse response = this.httpClient.execute(request);

        return this.objectMapper.readValue(EntityUtils.toString(response.getEntity(), "UTF-8"), EntryCollection.class);
    }

    public EntryMessage create(EntryCreate payload) throws URISyntaxException, IOException {
        Map<String, Object> pathParams = new HashMap<>();

        Map<String, Object> queryParams = new HashMap<>();

        URIBuilder builder = new URIBuilder(this.parser.url('/bar/$year&lt;[0-9]+&gt;', pathParams));
        this.parser.query(builder, queryParams);

        HttpPost request = new HttpPost(builder.build());
        request.addHeader("Content-Type", "application/json");
        request.setEntity(new StringEntity(this.objectMapper.writeValueAsString(payload), ContentType.APPLICATION_JSON));

        HttpResponse response = this.httpClient.execute(request);

        return this.objectMapper.readValue(EntityUtils.toString(response.getEntity(), "UTF-8"), EntryMessage.class);
    }


}
