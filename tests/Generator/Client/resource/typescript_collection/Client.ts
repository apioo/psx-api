/**
 * Client automatically generated by SDKgen please do not edit this file manually
 * {@link https://sdkgen.app}
 */

import {ClientAbstract, CredentialsInterface, TokenStoreInterface} from "sdkgen-client"
import {HttpBearer} from "sdkgen-client"

import FooResource from "./FooResource";
import BarByFooResource from "./BarByFooResource";
import BarByYearResource from "./BarByYearResource";

export default class Client extends ClientAbstract {
    public constructor(baseUrl: string, token: string, tokenStore: TokenStoreInterface|null = null, scopes: Array<string>|null = []) {
        super(baseUrl, new HttpBearer(token), tokenStore, scopes);
    }

    /**
     * Endpoint: /foo
     *
     * foo
     */
    public async getFoo(): Promise<FooResource>
    {
        return new FooResource(
            this.baseUrl,
            await this.newHttpClient()
        );
    }

    /**
     * Endpoint: /bar/:foo
     *
     * bar
     */
    public async getBarByFoo(foo: string): Promise<BarByFooResource>
    {
        return new BarByFooResource(
            foo,
            this.baseUrl,
            await this.newHttpClient()
        );
    }

    /**
     * Endpoint: /bar/$year<[0-9]+>
     *
     * bar
     */
    public async getBarByYear(year: string): Promise<BarByYearResource>
    {
        return new BarByYearResource(
            year,
            this.baseUrl,
            await this.newHttpClient()
        );
    }

}
