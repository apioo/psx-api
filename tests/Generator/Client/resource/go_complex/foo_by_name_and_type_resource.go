
// FooByNameAndTypeResource automatically generated by SDKgen please do not edit this file manually
// @see https://sdkgen.app



import (
    "bytes"
    "encoding/json"
    "errors"
    "github.com/apioo/sdkgen-go"
    "io"
    "net/http"
    "net/url"
)

type FooByNameAndTypeResource struct {
    url string
    client *http.Client
}

// PostEntryOrMessage Returns a collection
func (resource FooByNameAndTypeResource) PostEntryOrMessage(data interface{}) (interface{}, error) {
    url, err := url.Parse(resource.url)
    if err != nil {
        return interface{}{}, errors.New("could not parse url")
    }


    raw, err := json.Marshal(data)
    if err != nil {
        return interface{}{}, errors.New("could not marshal provided JSON data")
    }

    var reqBody = bytes.NewReader(raw)

    req, err := http.NewRequest("POST", url.String(), reqBody)
    if err != nil {
        return interface{}{}, errors.New("could not create request")
    }

    req.Header.Set("Content-Type", "application/json")

    resp, err := resource.client.Do(req)
    if err != nil {
        return interface{}{}, errors.New("could not send request")
    }

    defer resp.Body.Close()

    respBody, err := io.ReadAll(resp.Body)
    if err != nil {
        return interface{}{}, errors.New("could not read response body")
    }

    var response interface{}

    err = json.Unmarshal(respBody, &response)
    if err != nil {
        return interface{}{}, errors.New("could not unmarshal JSON response")
    }

    return response, nil
}


func NewFooByNameAndTypeResource(name string, _type string, resource *sdkgen.Resource) *FooByNameAndTypeResource {
    return &FooByNameAndTypeResource {
        url: resource.BaseUrl + "/foo/"+name+"/"+_type+"",
        client: resource.HttpClient,
    }
}
