{
  "security": {
    "type": "httpBearer"
  },
  "operations": {
    "foo.get": {
      "path": "\/foo",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EntryCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "Returns a collection",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "foo"
      ]
    },
    "foo.create": {
      "path": "\/foo",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "EntryMessage"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EntryCreate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "foo"
      ]
    },
    "bar.get": {
      "path": "\/bar\/:foo",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EntryCollection"
        }
      },
      "arguments": {
        "foo": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "Returns a collection",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "bar"
      ]
    },
    "bar.create": {
      "path": "\/bar\/:foo",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "EntryMessage"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EntryCreate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "bar"
      ]
    },
    "baz.get": {
      "path": "\/bar\/$year<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EntryCollection"
        }
      },
      "arguments": {
        "year": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "Returns a collection",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "baz"
      ]
    },
    "baz.create": {
      "path": "\/bar\/$year<[0-9]+>",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "EntryMessage"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EntryCreate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "baz"
      ]
    }
  },
  "definitions": {
    "Entry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "pattern": "[A-z]+",
          "minLength": 3,
          "maxLength": 16
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "EntryCollection": {
      "type": "object",
      "properties": {
        "entry": {
          "type": "array",
          "items": {
            "$ref": "Entry"
          }
        }
      }
    },
    "EntryCreate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "pattern": "[A-z]+",
          "minLength": 3,
          "maxLength": 16
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "title",
        "date"
      ]
    },
    "EntryMessage": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}