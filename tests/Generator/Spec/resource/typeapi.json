{
  "security": {
    "type": "httpBearer"
  },
  "operations": {
    "get": {
      "path": "/foo/:name/:type",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EntryCollection"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "description": "Name parameter",
            "type": "string",
            "pattern": "[A-z]+",
            "minLength": 0,
            "maxLength": 16
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "enum": [
              "foo",
              "bar"
            ],
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "description": "startIndex parameter",
            "type": "integer",
            "minimum": 0,
            "maximum": 32
          }
        },
        "float": {
          "in": "query",
          "schema": {
            "type": "number"
          }
        },
        "boolean": {
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        "date": {
          "in": "query",
          "schema": {
            "format": "date",
            "type": "string"
          }
        },
        "datetime": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "args": {
          "in": "query",
          "schema": {
            "$ref": "Entry"
          }
        }
      },
      "throws": [],
      "description": "Returns a collection",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "create": {
      "path": "/foo/:name/:type",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "EntryMessage"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EntryCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "EntryMessage"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "EntryMessage"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "update": {
      "path": "/foo/:name/:type",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "EntryMessage"
          }
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "$ref": "EntryUpdate"
            }
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "EntryMessage"
          }
        },
        {
          "code": 500,
          "schema": {
            "type": "object",
            "additionalProperties": {
              "$ref": "EntryMessage"
            }
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "delete": {
      "path": "/foo/:name/:type",
      "method": "DELETE",
      "return": {
        "code": 204,
        "schema": {
          "$ref": "EntryMessage"
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EntryDelete"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    },
    "patch": {
      "path": "/foo/:name/:type",
      "method": "PATCH",
      "return": {
        "code": 200,
        "schema": {
          "type": "array",
          "items": {
            "$ref": "EntryMessage"
          }
        }
      },
      "arguments": {
        "name": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "EntryPatch"
            }
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "EntryMessage"
          }
        },
        {
          "code": 500,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "EntryMessage"
            }
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    }
  },
  "definitions": {
    "Entry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "pattern": "[A-z]+",
          "minLength": 3,
          "maxLength": 16
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "EntryCollection": {
      "type": "object",
      "properties": {
        "entry": {
          "type": "array",
          "items": {
            "$ref": "Entry"
          }
        }
      }
    },
    "EntryCreate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "pattern": "[A-z]+",
          "minLength": 3,
          "maxLength": 16
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "title",
        "date"
      ]
    },
    "EntryDelete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "pattern": "[A-z]+",
          "minLength": 3,
          "maxLength": 16
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "EntryMessage": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "EntryPatch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "pattern": "[A-z]+",
          "minLength": 3,
          "maxLength": 16
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "EntryUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "pattern": "[A-z]+",
          "minLength": 3,
          "maxLength": 16
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    }
  }
}