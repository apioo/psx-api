{
  "openapi": "3.0.0",
  "info": {
    "description": "### EOSIO Contract API\n*Made with \u2665\ufe0f by [pink.gg](https:\/\/pink.gg\/)*\n#### Current Chain: wax-mainnet\n#### Provided by: [Zeptagram](https:\/\/zeptagram.com)",
    "version": "1.2.12",
    "title": "EOSIO Contract API"
  },
  "servers": [
    {
      "url": "https:\/\/wmnft.zeptagram.com"
    },
    {
      "url": "http:\/\/wmnft.zeptagram.com"
    }
  ],
  "tags": [
    {
      "name": "assets",
      "description": "Assets"
    },
    {
      "name": "assets",
      "description": "Assets"
    },
    {
      "name": "collections",
      "description": "Collections"
    },
    {
      "name": "schemas",
      "description": "Schemas"
    },
    {
      "name": "templates",
      "description": "Templates"
    },
    {
      "name": "offers",
      "description": "Offers"
    },
    {
      "name": "transfers",
      "description": "Transfers"
    },
    {
      "name": "accounts",
      "description": "Accounts"
    },
    {
      "name": "burns",
      "description": "Burns"
    },
    {
      "name": "config",
      "description": "Config"
    },
    {
      "name": "sales",
      "description": "Sales"
    },
    {
      "name": "auctions",
      "description": "Auctions"
    },
    {
      "name": "buyoffers",
      "description": "Buyoffers"
    },
    {
      "name": "marketplaces",
      "description": "Marketplaces"
    },
    {
      "name": "pricing",
      "description": "Pricing"
    },
    {
      "name": "stats",
      "description": "Stats"
    },
    {
      "name": "config",
      "description": "Config"
    },
    {
      "name": "assets",
      "description": "Assets"
    },
    {
      "name": "assets",
      "description": "Assets"
    },
    {
      "name": "transfers",
      "description": "Transfers"
    },
    {
      "name": "offers",
      "description": "Offers"
    },
    {
      "name": "links",
      "description": "Share Links"
    },
    {
      "name": "config",
      "description": "Config"
    }
  ],
  "paths": {
    "\/atomicassets\/v1\/assets": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch assets.",
        "description": "You can filter the result by specific asset \/ template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter by owner",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter by burned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in asset name on template data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_immutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset immutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_mutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset mutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Check if asset is transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Check if asset is burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_duplicate_templates",
            "in": "query",
            "description": "Show only duplicate assets grouped by template",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_backed_tokens",
            "in": "query",
            "description": "Show only assets that are backed by a token",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "authorized_account",
            "in": "query",
            "description": "Filter for assets the provided account can edit. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_whitelist",
            "in": "query",
            "description": "Filter for multiple template ids split by \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_blacklist",
            "in": "query",
            "description": "Dont include specific template ids split by \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_templates_by_accounts",
            "in": "query",
            "description": "Dont templates that are owned by an account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_offers",
            "in": "query",
            "description": "Hide assets which are used in an offer",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asset_id",
                "minted",
                "updated",
                "transferred",
                "template_mint",
                "name"
              ],
              "default": "asset_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline7013859f"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/assets\/{asset_id}": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch asset by id",
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2ea55b59"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/assets\/{asset_id}\/stats": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch asset stats",
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline20d1dd35"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/assets\/{asset_id}\/logs": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch asset logs",
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/collections": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Fetch collections",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "Get collections by author",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorized_account",
            "in": "query",
            "description": "Filter for collections which the provided account can use to create assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_account",
            "in": "query",
            "description": "Filter for collections where the provided account is notified",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "collection_name"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlinecae37d48"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/collections\/{collection_name}": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Find collection by its name",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Name of collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlineb3b9967c"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/collections\/{collection_name}\/stats": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Get stats about collection",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Name of collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline28cb2593"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/collections\/{collection_name}\/logs": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Fetch collection logs",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Name of collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/schemas": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Fetch schemas",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Get all schemas within the collection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorized_account",
            "in": "query",
            "description": "Filter for schemas the provided account can edit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "schema_name"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2734e4b8"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/schemas\/{collection_name}\/{schema_name}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Find schema by schema_name",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "path",
            "description": "Name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlinea2fe30b0"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/schemas\/{collection_name}\/{schema_name}\/stats": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get stats about a specific schema",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "path",
            "description": "Name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline1b899a72"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/schemas\/{collection_name}\/{schema_name}\/logs": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Fetch schema logs",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "path",
            "description": "Name of schema",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/templates": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Fetch templates.",
        "description": "You can filter the result by specific asset \/ template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Get all templates within the collection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Get all templates which implement that schema",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issued_supply",
            "in": "query",
            "description": "Filter by issued supply",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_issued_supply",
            "in": "query",
            "description": "Filter by issued supply",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_issued_supply",
            "in": "query",
            "description": "Filter by issued supply",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "has_assets",
            "in": "query",
            "description": "Only show templates with existing supply > 0",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "max_supply",
            "in": "query",
            "description": "Filter by max supply",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter by burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter by transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "authorized_account",
            "in": "query",
            "description": "Filter for templates the provided account can use",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for template id or",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "created"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline1a1c0c3e"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/templates\/{collection_name}\/{template_id}": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Find template by id",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Name of collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "ID of template",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlined7b3950c"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/templates\/{collection_name}\/{template_id}\/stats": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get stats about a specific template",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Name of collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "ID of template",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlineacc80e6b"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/templates\/{collection_name}\/{template_id}\/logs": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Fetch template logs",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Name of collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "ID of template",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/offers": {
      "get": {
        "tags": [
          "offers"
        ],
        "summary": "Fetch offers",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "Notified account (can be sender or recipient) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Offer sender - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Offer recipient - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter by Offer State (0: PENDING - Offer created and valid, 1: INVALID - Assets are missing because ownership has changed, 2: UNKNOWN - Offer is not valid anymore, 3: ACCEPTED - Offer was accepted, 4: DECLINED - Offer was declined by recipient, 5: CANCELLED - Offer was canceled by sender) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_recipient_contract",
            "in": "query",
            "description": "Filter offers where recipient is a contract",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "only offers which contain this asset_id - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "only offers which contain assets of this template - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "only offers which contain assets of this schema - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "only offers which contain assets of this collection - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_whitelist",
            "in": "query",
            "description": "Only offers which are sent by one of these accounts",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_blacklist",
            "in": "query",
            "description": "Exclude offers which are sent by one of these accounts",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender_asset_whitelist",
            "in": "query",
            "description": "Only offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender_asset_blacklist",
            "in": "query",
            "description": "Exclude offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient_asset_whitelist",
            "in": "query",
            "description": "Only offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient_asset_blacklist",
            "in": "query",
            "description": "Exclude offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_contracts",
            "in": "query",
            "description": "dont show offers from or to accounts that have code deployed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline636db0a6"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/offers\/{offer_id}": {
      "get": {
        "tags": [
          "offers"
        ],
        "summary": "Find offer by id",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "description": "ID of offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlinec16cb6b4"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/offers\/{offer_id}\/logs": {
      "get": {
        "tags": [
          "offers"
        ],
        "summary": "Fetch offer logs",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "description": "ID of offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/transfers": {
      "get": {
        "tags": [
          "transfers"
        ],
        "summary": "Fetch transfers",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "Notified account (can be sender or recipient) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Transfer sender - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Transfer recipient - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "only transfers which contain this asset_id - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "only transfers which contain assets of this template - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "only transfers which contain assets of this schema - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "only transfers which contain assets of this collection - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_contracts",
            "in": "query",
            "description": "dont show transfers from or to accounts that have code deployed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline311842ae"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get accounts which own atomicassets NFTs",
        "parameters": [
          {
            "name": "match",
            "in": "query",
            "description": "Search for partial account name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter for specific collection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter for specific schema",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter for specific template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_offers",
            "in": "query",
            "description": "Hide assets which are used in an offer",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlineffeae89e"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/accounts\/{account}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get a specific account",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "description": "Account name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_offers",
            "in": "query",
            "description": "Hide assets which are used in an offer",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlineb948cb9b"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/accounts\/{account}\/{collection_name}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get templates and schemas count by account",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "description": "Account name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline87e7e216"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/burns": {
      "get": {
        "tags": [
          "burns"
        ],
        "summary": "Get accounts which own atomicassets NFTs",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter for specific collection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter for specific schema",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter for specific template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlineffeae89e"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/burns\/{account}": {
      "get": {
        "tags": [
          "burns"
        ],
        "summary": "Get a specific account",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "description": "Account name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_offers",
            "in": "query",
            "description": "Hide assets which are used in an offer",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlined52801ac"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicassets\/v1\/config": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Get general information about the API and the connected contract",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline1124b387"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/sales": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Get all sales. ",
        "description": "You can filter the result by specific asset \/ template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Filter by sale state (0: WAITING - Sale created but offer was not send yet, 1: LISTED - Assets for sale, 2: CANCELED - Sale was canceled, 3: SOLD - Sale was bought4: INVALID - Sale is still listed but offer is currently invalid (can become valid again if the user owns all assets again)) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_assets",
            "in": "query",
            "description": "Max assets per listing",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "min_assets",
            "in": "query",
            "description": "Min assets per listing",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "show_seller_contracts",
            "in": "query",
            "description": "If false no seller contracts are shown except if they are in the contract whitelist",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contract_whitelist",
            "in": "query",
            "description": "Show these accounts even if they are contracts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "seller_blacklist",
            "in": "query",
            "description": "Dont show listings from these sellers (Split multiple with \",\")",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "buyer_blacklist",
            "in": "query",
            "description": "Dont show listings from these buyers (Split multiple with \",\")",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "Asset id in the offer",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "name": "marketplace",
            "in": "query",
            "description": "Filter by all sales where a certain marketplace is either taker or maker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maker_marketplace",
            "in": "query",
            "description": "Maker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taker_marketplace",
            "in": "query",
            "description": "Taker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "Filter accounts that are either seller or buyer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller",
            "in": "query",
            "description": "Filter by seller - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer",
            "in": "query",
            "description": "Filter by buyer - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Lower price limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Upper price limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_template_mint",
            "in": "query",
            "description": "Min template mint",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_template_mint",
            "in": "query",
            "description": "Max template mint",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter by owner",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter by burned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in asset name on template data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_immutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset immutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_mutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset mutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Check if asset is transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Check if asset is burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "sale_id",
                "price",
                "template_mint"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline563c4072"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/sales\/templates": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Get the cheapest sale grouped by templates. ",
        "description": "You can filter the result by specific asset \/ template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Token symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Min price",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Max price",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter by owner",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter by burned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in asset name on template data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_immutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset immutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_mutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset mutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Check if asset is transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Check if asset is burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "template_id",
                "price"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline563c4072"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/sales\/{sale_id}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Get a specific sale by id",
        "parameters": [
          {
            "in": "path",
            "name": "sale_id",
            "description": "Sale Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline4a0559e2"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/sales\/{sale_id}\/logs": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Fetch sale logs",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "ID of sale",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/auctions": {
      "get": {
        "tags": [
          "auctions"
        ],
        "summary": "Get all auctions.",
        "description": "You can filter the result by specific asset \/ template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Filter by auction state (0: WAITING: Auction created but assets were not transferred yet, 1: LISTED - Auction pending and open to bids, 2: CANCELED - Auction was canceled, 3: SOLD - Auction has been sold, 4: INVALID - Auction ended but no bid was made) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bidder",
            "in": "query",
            "description": "Filter by auctions with this bidder",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participant",
            "in": "query",
            "description": "Filter by auctions where this account participated and can still claim \/ bid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_assets",
            "in": "query",
            "description": "Max assets per listing",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "min_assets",
            "in": "query",
            "description": "Min assets per listing",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "show_seller_contracts",
            "in": "query",
            "description": "If false no seller contracts are shown except if they are in the contract whitelist",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contract_whitelist",
            "in": "query",
            "description": "Show these accounts even if they are contracts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "seller_blacklist",
            "in": "query",
            "description": "Dont show listings from these sellers (Split multiple with \",\")",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "buyer_blacklist",
            "in": "query",
            "description": "Dont show listings from these buyers (Split multiple with \",\")",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "Asset id in the offer",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "name": "marketplace",
            "in": "query",
            "description": "Filter by all sales where a certain marketplace is either taker or maker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maker_marketplace",
            "in": "query",
            "description": "Maker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taker_marketplace",
            "in": "query",
            "description": "Taker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "Filter accounts that are either seller or buyer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller",
            "in": "query",
            "description": "Filter by seller - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer",
            "in": "query",
            "description": "Filter by buyer - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Lower price limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Upper price limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_template_mint",
            "in": "query",
            "description": "Min template mint",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_template_mint",
            "in": "query",
            "description": "Max template mint",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter by owner",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter by burned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in asset name on template data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_immutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset immutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_mutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset mutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Check if asset is transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Check if asset is burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "ending",
                "auction_id",
                "price",
                "template_mint"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline5d957a23"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/auctions\/{auction_id}": {
      "get": {
        "tags": [
          "auctions"
        ],
        "summary": "Get a specific auction by id",
        "parameters": [
          {
            "in": "path",
            "name": "auction_id",
            "description": "Auction Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline07db2bcf"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/auctions\/{auction_id}\/logs": {
      "get": {
        "tags": [
          "auctions"
        ],
        "summary": "Fetch auction logs",
        "parameters": [
          {
            "name": "auction_id",
            "in": "path",
            "description": "ID of auction",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/buyoffers": {
      "get": {
        "tags": [
          "buyoffers"
        ],
        "summary": "Get all buyoffers.",
        "description": "You can filter the result by specific asset \/ template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Filter by buyoffer state (0: WAITING: Buyoffer created and pending, 1: LISTED - Buyoffer was declined, 2: CANCELED - Buyoffer was canceled, 3: SOLD - Buyoffer has been sold, 4: INVALID - Buyoffer invalid because recipient does not own all assets anymore) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_assets",
            "in": "query",
            "description": "Max assets per listing",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "min_assets",
            "in": "query",
            "description": "Min assets per listing",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "show_seller_contracts",
            "in": "query",
            "description": "If false no seller contracts are shown except if they are in the contract whitelist",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contract_whitelist",
            "in": "query",
            "description": "Show these accounts even if they are contracts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "seller_blacklist",
            "in": "query",
            "description": "Dont show listings from these sellers (Split multiple with \",\")",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "buyer_blacklist",
            "in": "query",
            "description": "Dont show listings from these buyers (Split multiple with \",\")",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "Asset id in the offer",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "name": "marketplace",
            "in": "query",
            "description": "Filter by all sales where a certain marketplace is either taker or maker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maker_marketplace",
            "in": "query",
            "description": "Maker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taker_marketplace",
            "in": "query",
            "description": "Taker marketplace - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "Filter accounts that are either seller or buyer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller",
            "in": "query",
            "description": "Filter by seller - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer",
            "in": "query",
            "description": "Filter by buyer - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Lower price limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Upper price limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_template_mint",
            "in": "query",
            "description": "Min template mint",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_template_mint",
            "in": "query",
            "description": "Max template mint",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter by owner",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter by burned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in asset name on template data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_immutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset immutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_mutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset mutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Check if asset is transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Check if asset is burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "buyoffer_id",
                "price",
                "template_mint"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline004e82a0"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/buyoffers\/{buyoffer_id}": {
      "get": {
        "tags": [
          "buyoffers"
        ],
        "summary": "Get a specific buyoffer by id",
        "parameters": [
          {
            "in": "path",
            "name": "buyoffer_id",
            "description": "Buyoffer Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline0841b879"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/buyoffers\/{buyoffer_id}\/logs": {
      "get": {
        "tags": [
          "buyoffers"
        ],
        "summary": "Fetch buyoffer logs",
        "parameters": [
          {
            "name": "buyoffer_id",
            "in": "path",
            "description": "ID of buyoffer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/marketplaces": {
      "get": {
        "tags": [
          "marketplaces"
        ],
        "summary": "Get all registered marketplaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline14ab017b"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/marketplaces\/{marketplace_name}": {
      "get": {
        "tags": [
          "marketplaces"
        ],
        "summary": "Get atomicmarket config",
        "parameters": [
          {
            "in": "path",
            "name": "marketplace_name",
            "description": "Marketplace name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline0dbc05c9"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/assets\/{asset_id}\/sales": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Gets price history for a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "asset_id",
            "description": "Asset Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "buyer",
            "in": "query",
            "description": "Buyer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller",
            "in": "query",
            "description": "Seller",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Token symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by time",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlineb2e6fd35"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/prices\/sales": {
      "get": {
        "tags": [
          "pricing"
        ],
        "summary": "Gets price history for a template or schema",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Token symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline85a8820c"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/prices\/sales\/days": {
      "get": {
        "tags": [
          "pricing"
        ],
        "summary": "Gets price history for a template or schema",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Token symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline6d90dcea"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/prices\/templates": {
      "get": {
        "tags": [
          "pricing"
        ],
        "summary": "Get template price stats",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Token symbol",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline74cdda32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/prices\/assets": {
      "get": {
        "tags": [
          "pricing"
        ],
        "summary": "Gets price history for a template or schema",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter by owner",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter by burned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in asset name on template data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_immutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset immutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_mutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset mutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Check if asset is transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Check if asset is burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorized_account",
            "in": "query",
            "description": "Filter for assets the provided account can edit. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_offers",
            "in": "query",
            "description": "Hide assets which are used in an offer",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline4eea33ed"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/stats\/collections": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get market collections sorted by volume or listings",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Token Symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "volume",
                "listings"
              ],
              "default": "volume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlinecbc952ff"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/stats\/collections\/{collection_name}": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get market collections sorted by volume or listings",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Token Symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlinecbc952ff"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/stats\/accounts": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get market collections sorted by volume or listings",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Token Symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "buy_volume",
                "sell_volume"
              ],
              "default": "buy_volume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline37285df6"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/stats\/accounts\/{account}": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get market collections sorted by volume or listings",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "description": "Account Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Token Symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3e1988f8"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/stats\/schemas\/{collection_name}": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get market schemas sorted by volume or listings",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Token Symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "volume",
                "listings"
              ],
              "default": "volume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline01d71b58"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/stats\/graph": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get history of volume and",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Token Symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline03ec62d9"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/stats\/sales": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get total sales and volume",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Token Symbol",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlinee9e8d085"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/config": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Get atomicmarket config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline4f499623"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/assets": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch assets.",
        "description": "You can filter the result by specific asset \/ template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "description": "Filter by collection name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "Filter by schema name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "Filter by template id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Filter for transferable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Filter for burnable assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter for burned assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter by owner",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "burned",
            "in": "query",
            "description": "Filter by burned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "match",
            "in": "query",
            "description": "Search for input in asset name on template data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_immutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset immutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_mutable_name",
            "in": "query",
            "description": "Search for input in asset name on asset mutable data",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_transferable",
            "in": "query",
            "description": "Check if asset is transferable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_burnable",
            "in": "query",
            "description": "Check if asset is burnable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_duplicate_templates",
            "in": "query",
            "description": "Show only duplicate assets grouped by template",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_backed_tokens",
            "in": "query",
            "description": "Show only assets that are backed by a token",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "authorized_account",
            "in": "query",
            "description": "Filter for assets the provided account can edit. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_whitelist",
            "in": "query",
            "description": "Filter for multiple template ids split by \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_blacklist",
            "in": "query",
            "description": "Dont include specific template ids split by \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_templates_by_accounts",
            "in": "query",
            "description": "Dont templates that are owned by an account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_offers",
            "in": "query",
            "description": "Hide assets which are used in an offer",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asset_id",
                "minted",
                "updated",
                "transferred",
                "template_mint",
                "name",
                "suggested_median_price",
                "suggested_average_price",
                "median_price",
                "average_price"
              ],
              "default": "asset_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline96783c6c"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/assets\/{asset_id}": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch asset by id",
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline359f6138"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/assets\/{asset_id}\/stats": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch asset stats",
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline20d1dd35"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/assets\/{asset_id}\/logs": {
      "get": {
        "tags": [
          "assets"
        ],
        "summary": "Fetch asset logs",
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/transfers": {
      "get": {
        "tags": [
          "transfers"
        ],
        "summary": "Fetch transfers",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "Notified account (can be sender or recipient) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Transfer sender - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Transfer recipient - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "only transfers which contain this asset_id - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "only transfers which contain assets of this template - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "only transfers which contain assets of this schema - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "only transfers which contain assets of this collection - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_contracts",
            "in": "query",
            "description": "dont show transfers from or to accounts that have code deployed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline382d5749"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/offers": {
      "get": {
        "tags": [
          "offers"
        ],
        "summary": "Fetch offers",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "Notified account (can be sender or recipient) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Offer sender - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Offer recipient - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter by Offer State (0: PENDING - Offer created and valid, 1: INVALID - Assets are missing because ownership has changed, 2: UNKNOWN - Offer is not valid anymore, 3: ACCEPTED - Offer was accepted, 4: DECLINED - Offer was declined by recipient, 5: CANCELLED - Offer was canceled by sender) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_recipient_contract",
            "in": "query",
            "description": "Filter offers where recipient is a contract",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "only offers which contain this asset_id - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "description": "only offers which contain assets of this template - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schema_name",
            "in": "query",
            "description": "only offers which contain assets of this schema - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "query",
            "description": "only offers which contain assets of this collection - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_whitelist",
            "in": "query",
            "description": "Only offers which are sent by one of these accounts",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_blacklist",
            "in": "query",
            "description": "Exclude offers which are sent by one of these accounts",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender_asset_whitelist",
            "in": "query",
            "description": "Only offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender_asset_blacklist",
            "in": "query",
            "description": "Exclude offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient_asset_whitelist",
            "in": "query",
            "description": "Only offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient_asset_blacklist",
            "in": "query",
            "description": "Exclude offers which contain these assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hide_contracts",
            "in": "query",
            "description": "dont show offers from or to accounts that have code deployed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline789aa161"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/offers\/{offer_id}": {
      "get": {
        "tags": [
          "offers"
        ],
        "summary": "Find offer by id",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "description": "ID of offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2c904cf9"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomicmarket\/v1\/offers\/{offer_id}\/logs": {
      "get": {
        "tags": [
          "offers"
        ],
        "summary": "Fetch offer logs",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "description": "ID of offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomictools\/v1\/links": {
      "get": {
        "tags": [
          "links"
        ],
        "summary": "Get all links",
        "parameters": [
          {
            "name": "creator",
            "in": "query",
            "description": "Link Creator",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "claimer",
            "in": "query",
            "description": "Claimer of the link if it was claimed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_key",
            "in": "query",
            "description": "Public key which is used to share the assets",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter by link state (0: WAITING - Link created but items were not transferred yet, 1: CREATED - Link is pending, 2: CANCELED - Creator canceled link, 3: CLAIMED - Link was claimed, ) - separate multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_blacklist",
            "in": "query",
            "description": "Hide collections from result. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_whitelist",
            "in": "query",
            "description": "Show only results from specific collections. Split multiple with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "seperate multiple ids with \",\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lower_bound",
            "in": "query",
            "description": "lower bound of primary key (value included)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upper_bound",
            "in": "query",
            "description": "upper bound of primary key (value excluded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only show results before this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Only show results after this timestamp in milliseconds (value excluded)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Column to sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inlinedb18d4ba"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomictools\/v1\/links\/{link_id}": {
      "get": {
        "tags": [
          "links"
        ],
        "summary": "Get a specific link by id",
        "parameters": [
          {
            "in": "path",
            "name": "link_id",
            "description": "Link Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3a3cb959"
                }
              }
            }
          },
          "416": {
            "description": "Element not found",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomictools\/v1\/links\/{link_id}\/logs": {
      "get": {
        "tags": [
          "links"
        ],
        "summary": "Fetch link logs",
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "description": "ID of link",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Results per Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "action_whitelist",
            "in": "query",
            "description": "Action whitelist",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action_blacklist",
            "in": "query",
            "description": "Action blacklist",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline3fd53df7"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline2d859569"
                }
              }
            }
          }
        }
      }
    },
    "\/atomictools\/v1\/config": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Get atomictools config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "Inline7a0424ea"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Inlinecdb728a8": {
        "type": "object",
        "properties": []
      },
      "Inline66e31af9": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "data": {
            "$ref": "Inlinecdb728a8"
          },
          "txid": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Log": {
        "$ref": "Inline66e31af9"
      },
      "Inline3bac70d7": {
        "type": "object",
        "properties": {
          "collection_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "allow_notify": {
            "type": "boolean"
          },
          "authorized_accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notify_accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "market_fee": {
            "type": "number"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Inlineffffa488": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Inline15733e28": {
        "type": "object",
        "properties": {
          "schema_name": {
            "type": "string"
          },
          "format": {
            "type": "array",
            "items": {
              "$ref": "Inlineffffa488"
            }
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Inline6db6c0a2": {
        "type": "object",
        "properties": {
          "template_id": {
            "type": "string"
          },
          "max_supply": {
            "type": "string"
          },
          "issued_supply": {
            "type": "string"
          },
          "is_transferable": {
            "type": "boolean"
          },
          "is_burnable": {
            "type": "boolean"
          },
          "immutable_data": {
            "$ref": "Inlinecdb728a8"
          },
          "created_at_time": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          }
        }
      },
      "Inlinec529777e": {
        "type": "object",
        "properties": {
          "token_contract": {
            "type": "string"
          },
          "token_symbol": {
            "type": "string"
          },
          "token_precision": {
            "type": "integer"
          },
          "amount": {
            "type": "string"
          }
        }
      },
      "Inline86faf907": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "asset_id": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_transferable": {
            "type": "boolean"
          },
          "is_burnable": {
            "type": "boolean"
          },
          "template_mint": {
            "type": "string"
          },
          "collection": {
            "$ref": "Inline3bac70d7"
          },
          "schema": {
            "$ref": "Inline15733e28"
          },
          "template": {
            "$ref": "Inline6db6c0a2"
          },
          "backed_tokens": {
            "type": "array",
            "items": {
              "$ref": "Inlinec529777e"
            }
          },
          "immutable_data": {
            "$ref": "Inlinecdb728a8"
          },
          "mutable_data": {
            "$ref": "Inlinecdb728a8"
          },
          "data": {
            "$ref": "Inlinecdb728a8"
          },
          "burned_by_account": {
            "type": "string"
          },
          "burned_at_block": {
            "type": "string"
          },
          "burned_at_time": {
            "type": "string"
          },
          "updated_at_block": {
            "type": "string"
          },
          "updated_at_time": {
            "type": "string"
          },
          "transferred_at_block": {
            "type": "string"
          },
          "transferred_at_time": {
            "type": "string"
          },
          "minted_at_block": {
            "type": "string"
          },
          "minted_at_time": {
            "type": "string"
          }
        }
      },
      "Asset": {
        "$ref": "Inline86faf907"
      },
      "Inline916e2892": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "collection_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "allow_notify": {
            "type": "boolean"
          },
          "authorized_accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notify_accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "market_fee": {
            "type": "number"
          },
          "data": {
            "$ref": "Inlinecdb728a8"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Collection": {
        "$ref": "Inline916e2892"
      },
      "Inlined10c0cac": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "schema_name": {
            "type": "string"
          },
          "format": {
            "type": "array",
            "items": {
              "$ref": "Inlineffffa488"
            }
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          },
          "collection": {
            "$ref": "Inline3bac70d7"
          }
        }
      },
      "Schema": {
        "$ref": "Inlined10c0cac"
      },
      "Inline8a79a343": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "template_id": {
            "type": "string"
          },
          "max_supply": {
            "type": "string"
          },
          "issued_supply": {
            "type": "string"
          },
          "is_transferable": {
            "type": "boolean"
          },
          "is_burnable": {
            "type": "boolean"
          },
          "immutable_data": {
            "$ref": "Inlinecdb728a8"
          },
          "created_at_time": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "scheme": {
            "$ref": "Inline15733e28"
          },
          "collection": {
            "$ref": "Inline3bac70d7"
          }
        }
      },
      "Template": {
        "$ref": "Inline8a79a343"
      },
      "Inlinebe0f0ae6": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "offer_id": {
            "type": "string"
          },
          "sender_name": {
            "type": "string"
          },
          "recipient_name": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "state": {
            "type": "integer"
          },
          "is_sender_contract": {
            "type": "boolean"
          },
          "is_recipient_contract": {
            "type": "boolean"
          },
          "sender_assets": {
            "type": "array",
            "items": {
              "$ref": "Asset"
            }
          },
          "recipient_assets": {
            "type": "array",
            "items": {
              "$ref": "Asset"
            }
          },
          "updated_at_block": {
            "type": "string"
          },
          "updated_at_time": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Offer": {
        "$ref": "Inlinebe0f0ae6"
      },
      "Inline18f76e5c": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "transfer_id": {
            "type": "string"
          },
          "sender_name": {
            "type": "string"
          },
          "recipient_name": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "Asset"
            }
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Transfer": {
        "$ref": "Inline18f76e5c"
      },
      "Inlinefe4eed04": {
        "type": "object",
        "properties": {
          "market_contract": {
            "type": "string"
          },
          "sale_id": {
            "type": "string"
          }
        }
      },
      "Inline36fc3608": {
        "type": "object",
        "properties": {
          "market_contract": {
            "type": "string"
          },
          "auction_id": {
            "type": "string"
          }
        }
      },
      "Inline23df41a0": {
        "type": "object",
        "properties": {
          "token_contract": {
            "type": "string"
          },
          "token_precision": {
            "type": "integer"
          },
          "token_symbol": {
            "type": "string"
          }
        }
      },
      "Inline94a31c66": {
        "type": "object",
        "properties": {
          "average": {
            "type": "string"
          },
          "market_contract": {
            "type": "string"
          },
          "max": {
            "type": "string"
          },
          "median": {
            "type": "string"
          },
          "min": {
            "type": "string"
          },
          "sales": {
            "type": "string"
          },
          "suggested_average": {
            "type": "string"
          },
          "suggested_median": {
            "type": "string"
          },
          "token": {
            "$ref": "Inline23df41a0"
          }
        }
      },
      "Inline226ace36": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "asset_id": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_transferable": {
            "type": "boolean"
          },
          "is_burnable": {
            "type": "boolean"
          },
          "template_mint": {
            "type": "string"
          },
          "collection": {
            "$ref": "Inline3bac70d7"
          },
          "schema": {
            "$ref": "Inline15733e28"
          },
          "template": {
            "$ref": "Inline6db6c0a2"
          },
          "backed_tokens": {
            "type": "array",
            "items": {
              "$ref": "Inlinec529777e"
            }
          },
          "immutable_data": {
            "$ref": "Inlinecdb728a8"
          },
          "mutable_data": {
            "$ref": "Inlinecdb728a8"
          },
          "data": {
            "$ref": "Inlinecdb728a8"
          },
          "burned_by_account": {
            "type": "string"
          },
          "burned_at_block": {
            "type": "string"
          },
          "burned_at_time": {
            "type": "string"
          },
          "updated_at_block": {
            "type": "string"
          },
          "updated_at_time": {
            "type": "string"
          },
          "transferred_at_block": {
            "type": "string"
          },
          "transferred_at_time": {
            "type": "string"
          },
          "minted_at_block": {
            "type": "string"
          },
          "minted_at_time": {
            "type": "string"
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "Inlinefe4eed04"
            }
          },
          "auctions": {
            "type": "array",
            "items": {
              "$ref": "Inline36fc3608"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "Inline94a31c66"
            }
          }
        }
      },
      "ListingAsset": {
        "$ref": "Inline226ace36"
      },
      "Inlinebb1d5faf": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "offer_id": {
            "type": "string"
          },
          "sender_name": {
            "type": "string"
          },
          "recipient_name": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "state": {
            "type": "integer"
          },
          "is_sender_contract": {
            "type": "boolean"
          },
          "is_recipient_contract": {
            "type": "boolean"
          },
          "sender_assets": {
            "type": "array",
            "items": {
              "$ref": "ListingAsset"
            }
          },
          "recipient_assets": {
            "type": "array",
            "items": {
              "$ref": "ListingAsset"
            }
          },
          "updated_at_block": {
            "type": "string"
          },
          "updated_at_time": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "ListingOffer": {
        "$ref": "Inlinebb1d5faf"
      },
      "Inlinef7b99d3c": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "transfer_id": {
            "type": "string"
          },
          "sender_name": {
            "type": "string"
          },
          "recipient_name": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "ListingAsset"
            }
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "ListingTransfer": {
        "$ref": "Inlinef7b99d3c"
      },
      "Inlined616ecba": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "token_precision": {
            "type": "integer"
          },
          "token_contract": {
            "type": "string"
          },
          "token_symbol": {
            "type": "string"
          }
        }
      },
      "Inline19815004": {
        "type": "object",
        "properties": {
          "market_contract": {
            "type": "string"
          },
          "assets_contract": {
            "type": "string"
          },
          "sale_id": {
            "type": "string"
          },
          "seller": {
            "type": "string"
          },
          "buyer": {
            "type": "string"
          },
          "offer_id": {
            "type": "string"
          },
          "price": {
            "$ref": "Inlined616ecba"
          },
          "listing_price": {
            "type": "number"
          },
          "listing_symbol": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "Asset"
            }
          },
          "maker_marketplace": {
            "type": "string"
          },
          "taker_marketplace": {
            "type": "string"
          },
          "collection": {
            "$ref": "Inline3bac70d7"
          },
          "state": {
            "type": "integer"
          },
          "updated_at_block": {
            "type": "string"
          },
          "updated_at_time": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Sale": {
        "$ref": "Inline19815004"
      },
      "Inlinede464a22": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "account": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "Inline03fe463c": {
        "type": "object",
        "properties": {
          "market_contract": {
            "type": "string"
          },
          "assets_contract": {
            "type": "string"
          },
          "auction_id": {
            "type": "string"
          },
          "seller": {
            "type": "string"
          },
          "buyer": {
            "type": "string"
          },
          "price": {
            "$ref": "Inlined616ecba"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "Asset"
            }
          },
          "bids": {
            "type": "array",
            "items": {
              "$ref": "Inlinede464a22"
            }
          },
          "maker_marketplace": {
            "type": "string"
          },
          "taker_marketplace": {
            "type": "string"
          },
          "collection": {
            "$ref": "Inline3bac70d7"
          },
          "state": {
            "type": "integer"
          },
          "end_time": {
            "type": "string"
          },
          "updated_at_block": {
            "type": "string"
          },
          "updated_at_time": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Auction": {
        "$ref": "Inline03fe463c"
      },
      "Inlineecb350cd": {
        "type": "object",
        "properties": {
          "market_contract": {
            "type": "string"
          },
          "assets_contract": {
            "type": "string"
          },
          "buyoffer_id": {
            "type": "string"
          },
          "seller": {
            "type": "string"
          },
          "buyer": {
            "type": "string"
          },
          "price": {
            "$ref": "Inlined616ecba"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "Asset"
            }
          },
          "maker_marketplace": {
            "type": "string"
          },
          "taker_marketplace": {
            "type": "string"
          },
          "collection": {
            "$ref": "Inline3bac70d7"
          },
          "state": {
            "type": "integer"
          },
          "memo": {
            "type": "string"
          },
          "decline_memo": {
            "type": "string"
          },
          "updated_at_block": {
            "type": "string"
          },
          "updated_at_time": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Buyoffer": {
        "$ref": "Inlineecb350cd"
      },
      "Inline3b14cb7e": {
        "type": "object",
        "properties": {
          "marketplace_name": {
            "type": "string"
          },
          "creator": {
            "type": "string"
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Marketplace": {
        "$ref": "Inline3b14cb7e"
      },
      "Inline91e35da1": {
        "type": "object",
        "properties": {
          "tools_contract": {
            "type": "string"
          },
          "assets_contract": {
            "type": "string"
          },
          "link_id": {
            "type": "string"
          },
          "creator": {
            "type": "string"
          },
          "claimer": {
            "type": "string"
          },
          "state": {
            "type": "integer"
          },
          "public_key": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "Asset"
            }
          },
          "created_at_block": {
            "type": "string"
          },
          "created_at_time": {
            "type": "string"
          }
        }
      },
      "Link": {
        "$ref": "Inline91e35da1"
      }
    }
  }
}